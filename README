This is a simple Spring Cloud Gateway using default port 8080. It use CircuitBreaker Resilience4J to control 5 seconds timeout. It will log the request using GlobalFilter and Slf4j,Logback File Appender.

We can scale the gateway by x-axis, having multiple instances of the gateway running as needed and add a layer such as a load balancer to route to the instances.
We can monitor the health of our services using Spring Boot Actuator and a metrix tool e.g. Prometheus, Zabbix
Timeout can be tested by pointing to the wrong host for the service either use docker or unit testing
We can secure the gateway using load balancer and only expose the endpoint to intranet/vpn 

#build and run standalone demo.
mvnw package && java -jar target/savings-gateway-0.0.1-SNAPSHOT.jar

#build the docker image for demo
docker build -t demo/savings-gateway .

#start dockers. set hostname to where savings services are running. set to wrong host to test timeout.
docker run  -e "service.savings.hostname=http://192.168.0.103" -p 8080:8080 demo/savings-gateway

#sample call in curl
curl --location --request GET 'http://localhost:8080/savings/a/balance'

curl --location --request PUT 'http://localhost:8080/savings/a/balance' \
--header 'Content-Type: application/json' \
--data-raw '{"amount":33.1}'
